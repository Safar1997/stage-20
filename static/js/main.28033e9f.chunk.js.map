{"version":3,"sources":["App.jsx","index.js"],"names":["App","defaultField","name","type","placeholder","Type","field","meta","style","width","margin","touched","error","className","color","inputAge","display","validSchema","Yup","max","required","password","matches","min","passwordConfirmation","oneOf","email","website","url","age","skills","of","acceptedTerms","initialValues","onSubmit","values","actions","a","axios","post","then","res","status","alert","console","log","catch","err","setFieldError","response","JSON","stringify","setSubmitting","validationSchema","props","errors","isSubmitting","handleSubmit","boxSizing","marginTop","border","padding","borderRadius","Input","as","InputNumber","onChange","v","setFieldValue","Password","render","arrayHelpers","length","map","friend","index","key","MinusCircleOutlined","onClick","remove","PlusOutlined","insert","htmlType","push","Checkbox","disabled","marginLeft","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.28033e9f.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Input, InputNumber, Checkbox, Button,\n} from 'antd';\nimport {\n  Formik, Field, Form, FieldArray,\n} from 'formik';\n// import { SubmitButton, Form } from 'formik-antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport * as Yup from 'yup';\n\nconst App = () => {\n  const defaultField = (name, type, placeholder, Type) => (\n    <Field name={name}>\n      {({\n        field, // { name, value, onChange, onBlur }\n        meta,\n      }) => (\n        <div>\n          <Type\n            type={type}\n            placeholder={placeholder}\n            {...field}\n            style={{ width: '200px', margin: '5px' }}\n          />\n          {meta.touched && meta.error && (\n            <div className=\"error\" style={{ color: 'red', margin: '5px' }}>{meta.error}</div>\n          )}\n        </div>\n      )}\n    </Field>\n  );\n\n  const inputText = {\n    width: '200px',\n    margin: '5px',\n    display: 'block',\n  };\n  const inputAge = {\n    width: '60px',\n    margin: '5px',\n    display: 'block',\n  };\n\n  const validSchema = Yup.object({\n    name: Yup.string()\n      .max(50, 'Must 50 characters or less')\n      .required('You must enter Name'),\n    password: Yup.string()\n      .matches(/^[a-zA-Z0-9]{0,}$/, 'Password have only latin letters and digits')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .max(40, 'Must be 40 characters or less')\n      .matches(/[0-9]+/, 'Password must contain at least one digit')\n      .matches(/[A-Z]+/, 'Password must contain an one uppercase character')\n      .required('You must enter password'),\n    passwordConfirmation: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('You must confirm password'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('You must enter email'),\n    website: Yup.string().url('Mustbe a valid url'),\n    age: Yup.number('Must be an integer')\n      .min(18, 'Must be in range of 18 and 65')\n      .max(65, 'Must be in range of 18 and 65')\n      .required('You must enter your age'),\n    skills: Yup.array().of(Yup.string()\n      .required('Add a skill or delete field')),\n    acceptedTerms: Yup.boolean()\n      .required('Required')\n      .oneOf([true], 'You must accept the terms and conditions.'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: 'QWe',\n        password: '1Qqqqqqqq',\n        passwordConfirmation: '1Qqqqqqqq',\n        email: 'qwe@mail.ru',\n        website: 'http://www.we.ru',\n        age: 18,\n        skills: [],\n        acceptedTerms: false,\n      }}\n      onSubmit={async (values, actions) => {\n        await axios\n          .post('http://localhost:3001/sign-up', values)\n          .then((res) => {\n            if (res.status === 200) {\n              alert('Вы успешно зарегестрированы');\n              console.log(res);\n            }\n          })\n          .catch((err) => {\n            actions.setFieldError('email', 'this email is already exist');\n            console.log(err.response);\n          });\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }}\n      validationSchema={validSchema}\n    >\n      {(props) => {\n        const {\n          errors, touched, values, isSubmitting,\n        } = props;\n        return (\n          <Form\n            onSubmit={props.handleSubmit}\n            style={{\n              boxSizing: 'borderBox', width: '300px', margin: 'auto', marginTop: '200px', border: '1px solid gray', padding: '10px', borderRadius: '15px',\n            }}\n          >\n            {defaultField('name', 'input', 'Input Name', Input)}\n            {/* <Field name=\"name\" type=\"input\" as={Input} style={inputText} /> */}\n            <Field\n              name=\"age\"\n              type=\"number\"\n              as={InputNumber}\n              onChange={(v) => {\n                props.setFieldValue('age', v);\n              }}\n              style={inputAge}\n            />\n            {errors.age && touched.age ? (\n              <div style={{ color: 'red', margin: '5px' }}>{errors.age}</div>\n            ) : null}\n            {defaultField('password', 'password', 'Input password', Input.Password)}\n            {/* <Field name=\"password\" type=\"password\" as={Input.Password} style={{width: '200px', margin: '5px'}} /> */}\n            <div />\n            {defaultField('passwordConfirmation', 'password', 'Confirm password', Input.Password)}\n            {/* <Field name=\"passwordConfirmation\" type=\"password\" as={Input.Password} style={{width: '200px', margin: '5px'}} /> */}\n            {defaultField('email', 'email', 'email', Input)}\n            {defaultField('website', 'url', 'website', Input)}\n\n            {/* Experimental */}\n\n            <FieldArray\n              name=\"skills\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.skills && values.skills.length > 0 ? (\n                    values.skills.map((friend, index) => (\n                      <div key={index}>\n                        <Input\n                          placeholder=\"input skill\"\n                          name={`skills.${index}`}\n                          style={{ display: 'inlineBlock', width: '200px', margin: '5px' }}\n                        />\n                        <MinusCircleOutlined\n                          className=\"dynamic-delete-button\"\n                          style={{ margin: '0 10px' }}\n                          onClick={\n                            () => arrayHelpers.remove(index)\n                          }\n                        />\n                        <PlusOutlined\n                          style={{ margin: '0 10px' }}\n                          onClick={() => arrayHelpers.insert(index, '')}\n                        />\n                      </div>\n                    ))\n                  ) : (\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"button\"\n                      onClick={() => arrayHelpers.push('')}\n                      style={{ margin: '5px' }}\n                    >\n                      {/* show this when user has removed all friends from the list */}\n                      Add skill\n                    </Button>\n                  )}\n                </div>\n              )}\n            />\n            {/* {errors.skills && touched.skills ? (\n            <div style={{color: 'red', margin: '5px', display:'inline'}} >{errors.skills[1]}</div>\n          ) : null} */}\n\n            {/* Experimental */}\n\n            {defaultField('acceptedTerms', 'checkbox', 'checked', Checkbox)}\n            {/* <Field name=\"acceptedTerms\" type=\"checkbox\" as={Checkbox} style={{display: 'block', margin: '5px'}} /> */}\n\n            <Button\n              disabled={isSubmitting}\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{ display: 'block', margin: '15px', marginLeft: '5px' }}\n            >\n              Submit\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}